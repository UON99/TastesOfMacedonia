@model WebApplication7.Models.JointIndex


@{
    ViewBag.Title = "Index";
}
<link rel="stylesheet" href="/Content/ol.css" type="text/css">
<link rel="stylesheet" href="https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.3.0/css/ol.css" type="text/css">
<script src="https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.3.0/build/ol.js"></script>

<style>
    .map {
        height: 600px;
        width: 100%;
    }
    #info{
        font-size:13px;
        width:100%;
    }
        #info > *{
            display: inline-block;
            margin-top: auto;
            margin-bottom: auto;
            line-height: 20px;
            height: 35px;
            vertical-align: middle;
            width: 40%;
            white-space:nowrap;
            margin-left:10px;
            z-index:40;
        }
    body {
        font-family: Helvetica;
    }


    .popup {
        margin-bottom: 10px;
        background-color: #e15915;
        height: 170px !important;
        z-index: 0;
        border-radius: 30px;
        width: 400px !important;
    }

    .arrow {
        position: absolute;
        font-size: 50px;
        margin-left: auto;
        margin-right: auto;
        top: 155px;
        z-index:0;
        text-align: center;
        width: 100%;
        color: #e15915
    }

    #namediv {
        font-size: 20px;
        text-align: center;
        margin-bottom:4px;
    }
</style>

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<div class="row">
    <div id="map" class="map"></div>

    <div class="popup" id="popup">
        <div class="namediv" id="namediv">

        </div>
        <div id="info">
            <b>Type of cuisine:</b>
            <div class="cuisine" id="cuisine"></div>
            <b>Opening Hours:</b>
            <div class="opening_hours" id="opening_hours"></div>
            <b>Website: </b>
            <div class="website" id="website"></div>
            <b>Phone: </b>
            <div class="phone" id="phone"></div>

        </div>
        <div class="glyphicon glyphicon-triangle-bottom arrow"></div>


    </div>
</div>
<div class="row">
    <table class="table" id="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model=>model.mytables[0].name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.mytables[0].cuisine)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.mytables[0].opening_hours)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.mytables[0].website)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.mytables[0].phone)
                </th>


            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.mytables)
            {
                

                    var @sum = 0;
                    int @n = 0;
                
                <tr>

                    <td>
                        @Html.DisplayFor(modelItem => item.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.cuisine)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.opening_hours)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.website)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.phone)
                    </td>
                    <td>
                        <!--@Html.ActionLink("Edit", "Edit", new { id = item.id }) |
    @Html.ActionLink("Details", "Details", new { id = item.id }) |
    @Html.ActionLink("Delete", "Delete", new { id = item.id })-->

                        @Html.ActionLink("Reserve", "MakeReservation", new { id = item.id })
                        |
                        @{
                            int t = 0;
                            foreach (var r in Model.ratings)
                            {
                                if (r.RestaurantId == item.id)
                                {
                                    {
                                        sum += (int)r.rating1;
                                        n++;
                                        t = 1;
                                    }





                                }
                            }

                            if (t == 1)
                            {
                                float average = (float)sum / (float)n;

                                <b>Rating: <span>@average/5</span></b>
                            }
                            else
                            {
                                <b>Rating: <span>0/5</span></b>
                            }

                        }
                        -
                        @{
                            int s = 0;
                            foreach (var it in Model.ratings)
                            {

                                if (it.RestaurantId == item.id && ViewBag.UserID == it.user)
                                {
                                    <b>Rated </b>
                                    <br />
                                    s = 1;
                                    break;

                                }

                            }

                            if (s == 0)
                            {
                                @Html.ActionLink("Rate", "AddRating", new { id = item.id })
                                <br />
                            }
                        }


                        @{
                            int g = 0;
                            foreach (var it in Model.favorites)
                            {

                                if (it.user == ViewBag.userID && it.restaurant_name == item.name)
                                {
                                    @Html.ActionLink("Remove from Favorites", "RemoveFromFavorites", new { id = it.Id })
                                    g = 1;
                                    break;

                                }

                            }
                            if (g == 0)
                            {
                                @Html.ActionLink("Add To Favorites", "AddToFavorites", new { id = item.id })

                            }
                        }

                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>




@section scripts{
    <script src="~/Scripts/ol.js"></script>
    <script type="text/javascript" charset="utf8" src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.8.2.min.js"></script>
    <script type="text/javascript" charset="utf8" src="http://cdn.datatables.net/1.10.9/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript">

      
        var attribution = new ol.control.Attribution({
            collapsible: false
        });

        var map = new ol.Map({
            controls: ol.control.defaults({ attribution: false }).extend([attribution]),
            layers: [
                new ol.layer.Tile({
                    source: new ol.source.OSM()
                })
            ],
            target: 'map',
            renderer:'canvas',
            view: new ol.View({
                center: ol.proj.fromLonLat([21.4417, 42.0052]),
                maxZoom: 18,
                zoom: 12
            })
        });

        function add_map_point(lat, lng, name,cuisine, phone, website, opening) {
         
            var vectorLayer = new ol.layer.Vector({
                source: new ol.source.Vector({
                    features: [new ol.Feature({
                        name: name,
                        cuisine: cuisine,
                        phone: phone,
                        website: website,
                        opening: opening,
                        geometry: new ol.geom.Point(ol.proj.transform([parseFloat(lng), parseFloat(lat)], 'EPSG:4326', 'EPSG:3857')),
                    })]
                }),
                style: new ol.style.Style({
                    image: new ol.style.Icon({
                        anchor: [0.5, 0.5],
                        anchorXUnits: "fraction",
                        anchorYUnits: "fraction",
                        src: "https://upload.wikimedia.org/wikipedia/commons/e/ec/RedDot.svg",
                    })
                })
            });
            map.addLayer(vectorLayer);
        }

        @foreach (var item in Model.mytables) {
            <text>add_map_point('@item.lat', '@item.lon','@item.name','@item.cuisine','@item.phone','@item.website','@item.opening_hours')</text>
        }
        var element = document.getElementById('popup');
        var popup = new ol.Overlay({
            element: element,
            positioning: 'bottom-center',
            stopEvent: false
        });
        map.addOverlay(popup);
        map.on('singleclick', function (evt) {
            var feature = map.forEachFeatureAtPixel(evt.pixel, function (feature, layer) {
                return feature;
            });
            if (feature) {

                var namediv = document.getElementById('namediv');
                var cuisine = document.getElementById('cuisine');
                var phone = document.getElementById('phone');
                var website = document.getElementById('website');
                var opening = document.getElementById('opening_hours');
                // Offset the popup so it points at the middle of the marker not the tip
                popup.setOffset([0, -22]);
                popup.setPosition(evt.coordinate);
                element.style.display = 'block';
                element.style.fontSize = '10px';

                namediv.innerHTML = feature.get('name');
                cuisine.innerHTML = feature.get('cuisine');
                phone.innerHTML = feature.get('phone');
                website.innerHTML = feature.get('website');
                opening.innerHTML = feature.get('opening');

            } else {
                element.style.display = 'none';
            }
        });


        map.on('singleclick', function (evt) {
            var coord = evt.coordinate;
            var transformed_coordinate = ol.proj.transform(coord, "EPSG:900913", "EPSG:4326");
            console.log(transformed_coordinate);
            var div = document.getElementById("map");
            if (evt == this.vectorLayer) {
                var divtmp = document.createElement("div");
                divtmp.style.width = '100px';
                divtmp.style.height = '100px';
                divtmp.style.background = 'blue';
            }
        });



    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('.table').DataTable({
                "columns": [{ "data": "name", "autoWidth": true },
                    { "data": "cuisine", "autoWidth": true },
                    { "data": "opening_hours", "autoWidth": true },
                    { "data": "website", "autoWidth": true },
                    { "data": "phone", "autoWidth": true },
            });
        });
    </script>

}